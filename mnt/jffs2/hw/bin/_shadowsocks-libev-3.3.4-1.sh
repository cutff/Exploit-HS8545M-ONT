#!/bin/sh

export LD_LIBRARY_PATH=/mnt/jffs2/app/shadowsocks-libev_3.3.4-1/lib:$LD_LIBRARY_PATH


SS_CONFIG_FILE=/mnt/jffs2/hw/ss.json
SS_REDIR_BIN=/mnt/jffs2/app/shadowsocks-libev_3.3.4-1/bin/ss-redir
SS_TUNNEL_BIN=/mnt/jffs2/app/shadowsocks-libev_3.3.4-1/bin/ss-tunnel
GFW_FILE_PATH=/mnt/jffs2/hw/etc/gfw-nat

SERVER_IP=`cat $SS_CONFIG_FILE |grep '"server"' | awk  -F '"' '{print $4}'`

mkdir -p /var/run/


if [ ! -e /var/run/ss-redir.pid ] ;then

	sleep 60
	
	# create new nat table
	iptables -t nat -N SHADOWSOCKS
	
	# set iptables rule
	iptables -I INPUT -s 127.0.0.1/8 -p tcp --dport 1234 -j ACCEPT
	iptables -I INPUT -s 192.168.1.1/24 -p tcp --dport 1234 -j ACCEPT
	iptables -I INPUT -s 127.0.0.1/8 -p tcp --dport 5300 -j ACCEPT
	iptables -I INPUT -s 192.168.1.1/24 -p tcp --dport 5300 -j ACCEPT
	
	echo 3 > /proc/sys/net/ipv4/tcp_fastopen


else 
	
	kill `pidof ss-redir`
	kill `pidof ss-tunnel`

	rm -rf /var/run/ss-redir.pid
	rm -rf /var/run/ss-tunnel.pid

fi



#redir tunnel
$SS_REDIR_BIN -c $SS_CONFIG_FILE -b 192.168.1.1 -l 1234 -f /var/run/ss-redir.pid
$SS_TUNNEL_BIN -u -c $SS_CONFIG_FILE -b 127.0.0.1 -l 5300  -L 8.8.8.8:53 -f /var/run/ss-tunnel.pid


# flash nat table
iptables -t nat -F SHADOWSOCKS

# gfw list ip
iptables-restore --table=nat  < $GFW_FILE_PATH

# server ip
iptables -t nat -I SHADOWSOCKS -d $SERVER_IP -j RETURN
iptables -I FORWARD -d $SERVER_IP -j ACCEPT

# redirect all 80/443 packets to 1234 port
iptables -t nat -A SHADOWSOCKS -p tcp -j REDIRECT --to-ports 1234

#iptables -t nat -I PREROUTING -p tcp -j SHADOWSOCKS

exit 0
